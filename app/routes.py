from flask import Blueprint, render_template, make_response, request, redirect, url_for, flash, session
import time
import os
import uuid
from werkzeug.utils import secure_filename
import json
from functools import wraps
import jwt
from datetime import datetime, timedelta

main_bp = Blueprint('main', __name__)

# JWT –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
JWT_SECRET = "your-super-secret-jwt-key-change-in-production"
JWT_ALGORITHM = "HS256"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ JWT —Ç–æ–∫–µ–Ω–∞
def verify_jwt_token(token):
    print(f"DEBUG: –ü—Ä–æ–≤–µ—Ä—è–µ–º JWT —Ç–æ–∫–µ–Ω: {token[:50]}...")
    try:
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
        payload = jwt.decode(token, JWT_SECRET, algorithms=[JWT_ALGORITHM])
        print(f"DEBUG: JWT —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, payload: {payload}")
        return payload.get('admin', False)
    except jwt.ExpiredSignatureError:
        print("DEBUG: JWT —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫")
        return False
    except jwt.InvalidTokenError as e:
        print(f"DEBUG: JWT —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω: {e}")
        return False
    except Exception as e:
        print(f"DEBUG: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ JWT: {e}")
        return False

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –∑–∞—â–∏—Ç—ã –∞–¥–º–∏–Ω—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
def admin_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ URL
        token = request.view_args.get('token')
        print(f"DEBUG: –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –∏–∑ URL: {token[:50] if token else 'None'}...")
        
        # –í—Ä–µ–º–µ–Ω–Ω–æ —É–ø—Ä–æ—â–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if not token:
            print("DEBUG: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            return "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", 403
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞, –Ω–µ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º
        print("DEBUG: –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω (–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)")
        return f(*args, **kwargs)
    return decorated_function

# –°—Ç–∞—Ç–∏—á–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ (–±–∞–∑–æ–≤—ã–µ)
STATIC_PARTICIPANTS = [
    {
        'id': 'static_1',
        'name': 'üë®‚Äçü¶∞ –ú–∞—Å—Å–∞–∂–∏—Å—Ç –∏–∑ –®–≤–µ–π—Ü–∞—Ä–∏–∏',
        'text': '¬´–Ø –∫–∞—Å–∞–ª—Å—è —Å–æ—Ç–µ–Ω —Ç–µ–ª, –Ω–æ –Ω–µ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª —Å–≤–æ–µ–≥–æ¬ª',
        'story': '–†–∞–±–æ—Ç–∞—é —Ä—É–∫–∞–º–∏, –¥–µ—Ä–∂—É, —Å–Ω–∏–º–∞—é –±–æ–ª—å. –í—Å–µ –¥—É–º–∞—é—Ç, —á—Ç–æ —è —É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã–π –∏ —Å–ø–æ–∫–æ–π–Ω—ã–π. –ê –≤–Ω—É—Ç—Ä–∏ ‚Äî –ø—É—Å—Ç–æ—Ç–∞ –∏ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ.\n\n–ü—É—Ç—å —Å—Ç–∞–ª –ø–µ—Ä–≤—ã–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ–º, –≥–¥–µ –∫—Ç–æ-—Ç–æ —É–≤–∏–¥–µ–ª –º–µ–Ω—è, –Ω–µ –∫–∞–∫ –ø—Ä–æ—Ñ–∏, –∞ –∫–∞–∫ –º—É–∂—á–∏–Ω—É. –ì–¥–µ –Ω–µ –Ω–∞–¥–æ –±—ã–ª–æ –¥–æ–∫–∞–∑—ã–≤–∞—Ç—å.\n\n–°–µ–π—á–∞—Å —è —á—É–≤—Å—Ç–≤—É—é —Å–≤–æ—ë —Ç–µ–ª–æ. –ò –¥–∞—é –Ω–µ –∏–∑ –¥–æ–ª–≥–∞, –∞ –∏–∑ –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏.',
        'photo': 'img/character/character_1.png'
    },
    {
        'id': 'static_2',
        'name': 'üë©‚Äçü¶≥ –ñ–µ–Ω—â–∏–Ω–∞ –∏–∑ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω—ã',
        'text': '¬´–Ø –¥–æ–º–∞. –°—Ä–µ–¥–∏ —Ç–µ—Ö, –∫—Ç–æ —á—É–≤—Å—Ç–≤—É–µ—Ç –∫–∞–∫ —è¬ª',
        'story': '–Ø –∂–∏–ª–∞ –≤ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω–µ –∏ –¥—É–º–∞–ª–∞, —á—Ç–æ —Å–æ –º–Ω–æ–π —á—Ç–æ‚Äë—Ç–æ –Ω–µ —Ç–∞–∫. –í–æ–∫—Ä—É–≥ –±—ã–ª–∏ –ª—é–¥–∏, –Ω–æ —è –Ω–µ –º–æ–≥–ª–∞ –Ω–∞–π—Ç–∏ —Å–≤–æ–∏—Ö.\n\n–ù–∞ –ü—É—Ç–∏ —è –≤—Å—Ç—Ä–µ—Ç–∏–ª–∞ –∂–µ–Ω—â–∏–Ω, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª—ã—à–∞—Ç –±–µ–∑ —Å–ª–æ–≤. –ë–µ–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏. –ë–µ–∑ –∏–≥—Ä. –¢–æ–ª—å–∫–æ –≥–ª—É–±–∏–Ω–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞.\n\n–°–µ–π—á–∞—Å —É –º–µ–Ω—è –ø–æ–¥—Ä—É–≥–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –ú—ã –Ω–∞ –æ–¥–Ω–æ–π —á–∞—Å—Ç–æ—Ç–µ.',
        'photo': 'img/character/character_2.png'
    },
    {
        'id': 'static_3',
        'name': 'üë®‚Äçü¶± –ß–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª—Å—è –∏–∑ —Ç—å–º—ã',
        'text': '¬´–ï—Å–ª–∏ —è –µ—â—ë –∂–∏–≤ ‚Äî –∑–Ω–∞—á–∏—Ç, –º–µ–Ω—è –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –æ—Å—Ç–∞–≤–∏–ª–∏¬ª',
        'story': '–° 20 –¥–æ 40 —è –∂–∏–ª –≤–æ —Ç—å–º–µ: –Ω–∞—Ä–∫–æ—Ç–∏–∫–∏, —Ç—é—Ä—å–º—ã, –ø—É—Å—Ç–æ—Ç–∞. –ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –ø—ã—Ç–∞–ª—Å—è –≤—ã–±—Ä–∞—Ç—å—Å—è ‚Äî –ø–∞–¥–∞–ª —Å–Ω–æ–≤–∞. –í –∫–∞–∫–æ–π-—Ç–æ –º–æ–º–µ–Ω—Ç —è –ø–æ–Ω—è–ª: –µ—Å–ª–∏ —è –µ—â—ë –∂–∏–≤ ‚Äî –∑–Ω–∞—á–∏—Ç, –º–µ–Ω—è –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –æ—Å—Ç–∞–≤–∏–ª–∏.\n\n–í –û–°–ù–û–í–ï –ü–£–¢–ò —è –≤—Å—Ç—Ä–µ—Ç–∏–ª —Ç–µ—Ö, –∫—Ç–æ —Ç–æ–∂–µ –ø–∞–¥–∞–ª, –Ω–æ –Ω–µ —Å–ª–æ–º–∞–ª—Å—è. –ó–¥–µ—Å—å –Ω–µ —Å—É–¥—è—Ç, –Ω–µ –∂–∞–ª–µ—é—Ç, –∞ –¥–µ—Ä–∂–∞—Ç. –°–µ–π—á–∞—Å —è –Ω–µ –æ–¥–∏–Ω. –Ø –∏–¥—É —Å–≤–æ–π –ø—É—Ç—å ‚Äî –∏ –∑–Ω–∞—é, —Ä–∞–¥–∏ —á–µ–≥–æ –≤—Å—Ç–∞–ª.',
        'photo': 'img/character/character_3.png'
    }
]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ JSON
def load_participants():
    print("DEBUG: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...")
    print(f"DEBUG: STATIC_PARTICIPANTS —Å–æ–¥–µ—Ä–∂–∏—Ç {len(STATIC_PARTICIPANTS)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    
    try:
        with open('app/data/participants.json', 'r', encoding='utf-8') as f:
            dynamic_participants = json.load(f)
            print(f"DEBUG: –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(dynamic_participants)} –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            all_participants = STATIC_PARTICIPANTS + dynamic_participants
            print(f"DEBUG: –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(all_participants)}")
            return all_participants
    except FileNotFoundError:
        print("DEBUG: –§–∞–π–ª participants.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö")
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö
        return STATIC_PARTICIPANTS
    except Exception as e:
        print(f"DEBUG: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}")
        print("DEBUG: –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–∞–∫ fallback")
        return STATIC_PARTICIPANTS

# –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ JWT
@main_bp.route('/debug/jwt/<token>')
def debug_jwt(token):
    print(f"DEBUG: –¢–µ—Å—Ç–∏—Ä—É–µ–º JWT —Ç–æ–∫–µ–Ω: {token[:50]}...")
    is_valid = verify_jwt_token(token)
    return {
        'token': token[:50] + '...',
        'is_valid': is_valid,
        'jwt_secret': JWT_SECRET[:20] + '...' if len(JWT_SECRET) > 20 else JWT_SECRET
    }

# –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
@main_bp.route('/debug/participants')
def debug_participants():
    participants = load_participants()
    debug_info = {
        'total_participants': len(participants),
        'static_participants': len(STATIC_PARTICIPANTS),
        'participants': participants
    }
    return debug_info

@main_bp.route('/')
@main_bp.route('/<version>')
def index(version=None):
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à, –¥–æ–±–∞–≤–ª—è—è timestamp
    timestamp = int(time.time())
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ JSON
    print("DEBUG: –ó–∞–≥—Ä—É–∂–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    participants = load_participants()
    print(f"DEBUG: –ü–µ—Ä–µ–¥–∞–µ–º –≤ —à–∞–±–ª–æ–Ω {len(participants)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    
    response = make_response(render_template('index.html', 
                                          version=version or f'1.1.{timestamp}',
                                          participants=participants))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    response.headers['Cache-Control'] = 'no-cache, no-store, must-revalidate, max-age=0'
    response.headers['Pragma'] = 'no-cache'
    response.headers['Expires'] = '0'
    response.headers['Last-Modified'] = time.strftime('%a, %d %b %Y %H:%M:%S GMT', time.gmtime())
    
    return response

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ —Å JWT –≤ URL
@main_bp.route('/<token>/admin')
@admin_required
def admin_dashboard(token):
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    participants = load_participants()
    return render_template('admin/dashboard.html', participants=participants, token=token)

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
@main_bp.route('/<token>/admin/add-participant', methods=['GET', 'POST'])
@admin_required
def add_participant(token):
    if request.method == 'POST':
        name = request.form.get('name')
        text = request.form.get('text')
        story = request.form.get('story')
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        if 'photo' in request.files:
            file = request.files['photo']
            if file and file.filename:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
                filename = secure_filename(file.filename)
                file_extension = filename.rsplit('.', 1)[1].lower()
                new_filename = f"character_{uuid.uuid4().hex[:8]}.{file_extension}"
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                upload_folder = 'app/static/img/character'
                if not os.path.exists(upload_folder):
                    os.makedirs(upload_folder)
                
                file_path = os.path.join(upload_folder, new_filename)
                file.save(file_path)
                
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
                new_participant = {
                    'id': str(uuid.uuid4()),
                    'name': name,
                    'text': text,
                    'story': story,
                    'photo': f'img/character/{new_filename}'
                }
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON —Ñ–∞–π–ª
                save_participant(new_participant)
                
                flash('–£—á–∞—Å—Ç–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success')
                return redirect(url_for('main.admin_dashboard', token=token))
    
    return render_template('admin/add_participant.html', token=token)

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
@main_bp.route('/<token>/admin/delete-participant/<participant_id>')
@admin_required
def delete_participant(token, participant_id):
    participants = load_participants()
    participant = next((p for p in participants if p['id'] == participant_id), None)
    
    if participant:
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Ñ–æ—Ç–æ (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
        if not participant_id.startswith('static_') and participant.get('photo'):
            photo_path = os.path.join('app/static', participant['photo'])
            if os.path.exists(photo_path):
                os.remove(photo_path)
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ JSON (—Ç–æ–ª—å–∫–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
        if not participant_id.startswith('static_'):
            try:
                with open('app/data/participants.json', 'r', encoding='utf-8') as f:
                    dynamic_participants = json.load(f)
                dynamic_participants = [p for p in dynamic_participants if p['id'] != participant_id]
                save_participants(dynamic_participants)
                flash('–£—á–∞—Å—Ç–Ω–∏–∫ —É–¥–∞–ª–µ–Ω!', 'success')
            except Exception as e:
                flash(f'–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}', 'error')
        else:
            flash('–°—Ç–∞—Ç–∏—á–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å!', 'error')
    
    return redirect(url_for('main.admin_dashboard', token=token))

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def save_participant(participant):
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        try:
            with open('app/data/participants.json', 'r', encoding='utf-8') as f:
                participants = json.load(f)
        except FileNotFoundError:
            participants = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
        participants.append(participant)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        save_participants(participants)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞: {e}")

def save_participants(participants):
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs('app/data', exist_ok=True)
    
    with open('app/data/participants.json', 'w', encoding='utf-8') as f:
        json.dump(participants, f, ensure_ascii=False, indent=2)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ JWT —Ç–æ–∫–µ–Ω–∞ (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏)
def generate_admin_token():
    payload = {
        'admin': True,
        'iat': datetime.utcnow(),
        'exp': datetime.utcnow() + timedelta(hours=24)
    }
    return jwt.encode(payload, JWT_SECRET, algorithm=JWT_ALGORITHM) 